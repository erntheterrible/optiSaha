// Legacy login screen archived. See src/pages/Login.js for the current login implementation.

// Original contents moved for historical reference.

// import React from 'react';
// import { Box, Card, CardContent, Typography, TextField, Button, InputAdornment, IconButton, Alert, useTheme } from '@mui/material';
// import LockIcon from '@mui/icons-material/Lock';
// import PersonIcon from '@mui/icons-material/Person';
// import Visibility from '@mui/icons-material/Visibility';
// import VisibilityOff from '@mui/icons-material/VisibilityOff';
// import { useNavigate } from 'react-router-dom';
// import { authAPI } from './api';
// 
// const Login = ({ onLogin }) => {
//   const theme = useTheme();
//   const isLight = theme.palette.mode === 'light';
//   const [showPassword, setShowPassword] = React.useState(false);
//   const [username, setUsername] = React.useState('');
//   const [password, setPassword] = React.useState('');
//   const [loading, setLoading] = React.useState(false);
//   const [error, setError] = React.useState('');
//   const navigate = useNavigate();
// 
//   const handleShowPassword = () => setShowPassword((show) => !show);
// 
//   const handleSubmit = async (e) => {
//     e.preventDefault();
//     setError('');
//     setLoading(true);
//     try {
//       const response = await authAPI.login(username, password);
//       if (response.data && response.data.access_token) {
//         localStorage.setItem('token', response.data.access_token);
//         setLoading(false);
//         onLogin();
//         navigate('/');
//       } else {
//         setError('Beklenmeyen sunucu yanıtı.');
//         setLoading(false);
//       }
//     } catch (err) {
//       setError('Kullanıcı adı veya şifre hatalı.');
//       setLoading(false);
//     }
//   };
// 
//   return (
//     <Box sx={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', bgcolor: isLight ? '#F3F4F6' : '#111827' }}>
//       <Card sx={{ maxWidth: 400, width: '100%', p: 3 }}>
//         <CardContent>
//           <Typography variant="h4" sx={{ color: isLight ? '#111827' : '#F8FAFC', fontWeight: 700, mb: 1, textAlign: 'center', lineHeight: 1.2 }}>
//             OptiSaha
//             <Box component="span" sx={{ display: 'block', fontSize: '1.25rem', color: isLight ? '#4B5563' : '#E2E8F0', fontWeight: 500, mt: 0.5 }}>
//               Yönetim Paneli
//             </Box>
//           </Typography>
//           <Typography variant="body1" sx={{ color: isLight ? '#4B5563' : '#E2E8F0', mb: 2, textAlign: 'center' }}>
//             Lütfen giriş yapın
//           </Typography>
//           {error && <Alert severity="error" sx={{ mb: 2 }}>{error}</Alert>}
//           <form onSubmit={handleSubmit}>
//             <TextField
//               margin="normal"
//               required
//               fullWidth
//               label="Kullanıcı Adı"
//               value={username}
//               onChange={e => setUsername(e.target.value)}
//               InputProps={{
//                 startAdornment: (
//                   <InputAdornment position="start">
//                     <PersonIcon />
//                   </InputAdornment>
//                 ),
//               }}
//               autoFocus
//             />
//             <TextField
//               margin="normal"
//               required
//               fullWidth
//               label="Şifre"
//               type={showPassword ? 'text' : 'password'}
//               value={password}
//               onChange={e => setPassword(e.target.value)}
//               InputProps={{
//                 startAdornment: (
//                   <InputAdornment position="start">
//                     <LockIcon />
//                   </InputAdornment>
//                 ),
//                 endAdornment: (
//                   <InputAdornment position="end">
//                     <IconButton onClick={handleShowPassword} edge="end">
//                       {showPassword ? <VisibilityOff /> : <Visibility />}
//                     </IconButton>
//                   </InputAdornment>
//                 ),
//               }}
//             />
//             <Button
//               type="submit"
//               fullWidth
//               variant="contained"
//               sx={{ mt: 3, mb: 2 }}
//               disabled={loading}
//             >
//               {loading ? 'Giriş Yapılıyor...' : 'Giriş Yap'}
//             </Button>
//           </form>
//         </CardContent>
//       </Card>
//     </Box>
//   );
// };
// 
// export default Login;
